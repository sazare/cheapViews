julia> include("load_cheaplogic.jl")
... cheaplogic is loaded

julia> @time simpleprover("data/ml007.cnf",50,20)
readcore fname=data/ml007.cnf
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L8_R1, :(-(State(im_C17, battle, p1_C17))))
(:leval, lit) = (:leval, :(-(State(im_C17, battle, p1_C17))))
val = :(-(State(im_C17, battle, p1_C17)))
(lid, lit) = (:L9_R1, :(-(State(im_C17, party, p2_C17))))
(:leval, lit) = (:leval, :(-(State(im_C17, party, p2_C17))))
val = :(-(State(im_C17, party, p2_C17)))
(lid, lit) = (:L10_R1, :(-(ge(p1_C17, p2_C17))))
(:leval, lit) = (:leval, :(-(ge(p1_C17, p2_C17))))
val = :(-(ge(p1_C17, p2_C17)))
rb = (Any[:L8_R1, :L9_R1, :L10_R1], Any[:(-(State(im_C17, battle, p1_C17))), :(-(State(im_C17, party, p2_C17))), :(-(ge(p1_C17, p2_C17)))])
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L12_R2, :(-(State(im_C21, violent, p1_C21))))
(:leval, lit) = (:leval, :(-(State(im_C21, violent, p1_C21))))
val = :(-(State(im_C21, violent, p1_C21)))
rb = (Any[:L12_R2], Any[:(-(State(im_C21, violent, p1_C21)))])
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L25_R3, :(-(State(im_C20, battle, p1_C20))))
(:leval, lit) = (:leval, :(-(State(im_C20, battle, p1_C20))))
val = :(-(State(im_C20, battle, p1_C20)))
rb = (Any[:L25_R3], Any[:(-(State(im_C20, battle, p1_C20)))])
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L23_R4, :(-(State(im_C19, party, p1_C19))))
(:leval, lit) = (:leval, :(-(State(im_C19, party, p1_C19))))
val = :(-(State(im_C19, party, p1_C19)))
rb = (Any[:L23_R4], Any[:(-(State(im_C19, party, p1_C19)))])
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L27_R5, :(-(State(im_C18, battle, p1_C18))))
(:leval, lit) = (:leval, :(-(State(im_C18, battle, p1_C18))))
val = :(-(State(im_C18, battle, p1_C18)))
(lid, lit) = (:L28_R5, :(-(State(im_C18, party, p2_C18))))
(:leval, lit) = (:leval, :(-(State(im_C18, party, p2_C18))))
val = :(-(State(im_C18, party, p2_C18)))
(lid, lit) = (:L29_R5, :(-(ge(p2_C18, p1_C18))))
(:leval, lit) = (:leval, :(-(ge(p2_C18, p1_C18))))
val = :(-(ge(p2_C18, p1_C18)))
rb = (Any[:L27_R5, :L28_R5, :L29_R5], Any[:(-(State(im_C18, battle, p1_C18))), :(-(State(im_C18, party, p2_C18))), :(-(ge(p2_C18, p1_C18)))])
GOAL=>NEXT: Array{Any,1}[[:L7]] => Any[Any[:L8_R1, :L9_R1, :L10_R1], Any[:L12_R2], Any[:L25_R3], Any[:L23_R4], Any[:L27_R5, :L28_R5, :L29_R5]]
FAIL = ICMP(:battle, :party, :unify0ss)
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L9_R6, :(-(State(im_C23, party, p2_C17R1))))
(:leval, lit) = (:leval, :(-(State(im_C23, party, p2_C17R1))))
val = :(-(State(im_C23, party, p2_C17R1)))
(lid, lit) = (:L10_R6, :(-(ge(p1_C23, p2_C17R1))))
(:leval, lit) = (:leval, :(-(ge(p1_C23, p2_C17R1))))
val = :(-(ge(p1_C23, p2_C17R1)))
(lid, lit) = (:L31_R6, :(-(Weapons(im_C23, p1_C23))))
(:leval, lit) = (:leval, :(-(Weapons(im_C23, p1_C23))))
val = :(-(Weapons(im_C23, p1_C23)))
(lid, lit) = (:L32_R6, :(-(ge(p1_C23, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C23, 0.8))))
val = :(-(ge(p1_C23, 0.8)))
rb = (Any[:L9_R6, :L10_R6, :L31_R6, :L32_R6], Any[:(-(State(im_C23, party, p2_C17R1))), :(-(ge(p1_C23, p2_C17R1))), :(-(Weapons(im_C23, p1_C23))), :(-(ge(p1_C23, 0.8)))])
FAIL = ICMP(:violent, :party, :unify0ss)
FAIL = ICMP(:violent, :battle, :unify0ss)
FAIL = ICMP(:battle, :party, :unify0ss)
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L31_R7, :(-(Weapons(im_C23, p1_C23))))
(:leval, lit) = (:leval, :(-(Weapons(im_C23, p1_C23))))
val = :(-(Weapons(im_C23, p1_C23)))
(lid, lit) = (:L32_R7, :(-(ge(p1_C23, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C23, 0.8))))
val = :(-(ge(p1_C23, 0.8)))
rb = (Any[:L31_R7, :L32_R7], Any[:(-(Weapons(im_C23, p1_C23))), :(-(ge(p1_C23, 0.8)))])
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L3_R8, :(-(Eating(im_C22, p1_C22))))
(:leval, lit) = (:leval, :(-(Eating(im_C22, p1_C22))))
val = :(-(Eating(im_C22, p1_C22)))
(lid, lit) = (:L4_R8, :(-(ge(p1_C22, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22, 0.8))))
val = :(-(ge(p1_C22, 0.8)))
rb = (Any[:L3_R8, :L4_R8], Any[:(-(Eating(im_C22, p1_C22))), :(-(ge(p1_C22, 0.8)))])
FAIL = ICMP(:party, :battle, :unify0ss)
FAIL = ICMP(:battle, :party, :unify0ss)
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L28_R9, :(-(State(im_C23, party, p2_C18R5))))
(:leval, lit) = (:leval, :(-(State(im_C23, party, p2_C18R5))))
val = :(-(State(im_C23, party, p2_C18R5)))
(lid, lit) = (:L29_R9, :(-(ge(p2_C18R5, p1_C23))))
(:leval, lit) = (:leval, :(-(ge(p2_C18R5, p1_C23))))
val = :(-(ge(p2_C18R5, p1_C23)))
(lid, lit) = (:L31_R9, :(-(Weapons(im_C23, p1_C23))))
(:leval, lit) = (:leval, :(-(Weapons(im_C23, p1_C23))))
val = :(-(Weapons(im_C23, p1_C23)))
(lid, lit) = (:L32_R9, :(-(ge(p1_C23, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C23, 0.8))))
val = :(-(ge(p1_C23, 0.8)))
rb = (Any[:L28_R9, :L29_R9, :L31_R9, :L32_R9], Any[:(-(State(im_C23, party, p2_C18R5))), :(-(ge(p2_C18R5, p1_C23))), :(-(Weapons(im_C23, p1_C23))), :(-(ge(p1_C23, 0.8)))])
GOAL=>NEXT: Any[Any[:L8_R1, :L9_R1, :L10_R1], Any[:L12_R2], Any[:L25_R3], Any[:L23_R4], Any[:L27_R5, :L28_R5, :L29_R5]] => Any[Any[:L9_R6, :L10_R6, :L31_R6, :L32_R6], Any[:L31_R7, :L32_R7], Any[:L3_R8, :L4_R8], Any[:L28_R9, :L29_R9, :L31_R9, :L32_R9]]
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L10_R10, :(-(ge(p1_C23R6, p1_C22))))
(:leval, lit) = (:leval, :(-(ge(p1_C23R6, p1_C22))))
val = :(-(ge(p1_C23R6, p1_C22)))
(lid, lit) = (:L31_R10, :(-(Weapons(im_C22, p1_C23R6))))
(:leval, lit) = (:leval, :(-(Weapons(im_C22, p1_C23R6))))
val = :(-(Weapons(im_C22, p1_C23R6)))
(lid, lit) = (:L32_R10, :(-(ge(p1_C23R6, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C23R6, 0.8))))
val = :(-(ge(p1_C23R6, 0.8)))
(lid, lit) = (:L3_R10, :(-(Eating(im_C22, p1_C22))))
(:leval, lit) = (:leval, :(-(Eating(im_C22, p1_C22))))
val = :(-(Eating(im_C22, p1_C22)))
(lid, lit) = (:L4_R10, :(-(ge(p1_C22, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22, 0.8))))
val = :(-(ge(p1_C22, 0.8)))
rb = (Any[:L10_R10, :L31_R10, :L32_R10, :L3_R10, :L4_R10], Any[:(-(ge(p1_C23R6, p1_C22))), :(-(Weapons(im_C22, p1_C23R6))), :(-(ge(p1_C23R6, 0.8))), :(-(Eating(im_C22, p1_C22))), :(-(ge(p1_C22, 0.8)))])
FAIL = ICMP(:party, :battle, :unify0ss)  â˜…
FAIL = ICMP(:p1_C23R7, 0.8, :unify0sn) 
FAIL = ICMP(:p1_C23R7, 0.9, :unify0sn)
FAIL = ICMP(:p1_C23R7, 0.95, :unify0sn)
FAIL = ICMP(:p1_C23R7, 0.3, :unify0sn)
FAIL = ICMP(:p1_C23R7, 0.35, :unify0sn)
FAIL = ICMP(:p1_C22R8, 0.2, :unify0sn)
FAIL = ICMP(:p1_C22R8, 0.9, :unify0sn)
FAIL = ICMP(:p1_C22R8, 0.85, :unify0sn)
FAIL = ICMP(:p1_C22R8, 0.95, :unify0sn)
FAIL = ICMP(:p1_C22R8, 0.9, :unify0sn)
:evaluate_literals = :evaluate_literals
(lid, lit) = (:L29_R11, :(-(ge(p1_C22, p1_C23R9))))
(:leval, lit) = (:leval, :(-(ge(p1_C22, p1_C23R9))))
val = :(-(ge(p1_C22, p1_C23R9)))
(lid, lit) = (:L31_R11, :(-(Weapons(im_C22, p1_C23R9))))
(:leval, lit) = (:leval, :(-(Weapons(im_C22, p1_C23R9))))
val = :(-(Weapons(im_C22, p1_C23R9)))
(lid, lit) = (:L32_R11, :(-(ge(p1_C23R9, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C23R9, 0.8))))
val = :(-(ge(p1_C23R9, 0.8)))
(lid, lit) = (:L3_R11, :(-(Eating(im_C22, p1_C22))))
(:leval, lit) = (:leval, :(-(Eating(im_C22, p1_C22))))
val = :(-(Eating(im_C22, p1_C22)))
(lid, lit) = (:L4_R11, :(-(ge(p1_C22, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22, 0.8))))
val = :(-(ge(p1_C22, 0.8)))
rb = (Any[:L29_R11, :L31_R11, :L32_R11, :L3_R11, :L4_R11], Any[:(-(ge(p1_C22, p1_C23R9))), :(-(Weapons(im_C22, p1_C23R9))), :(-(ge(p1_C23R9, 0.8))), :(-(Eating(im_C22, p1_C22))), :(-(ge(p1_C22, 0.8)))])
FAIL = ICMP(:party, :battle, :unify0ss)
GOAL=>NEXT: Any[Any[:L9_R6, :L10_R6, :L31_R6, :L32_R6], Any[:L31_R7, :L32_R7], Any[:L3_R8, :L4_R8], Any[:L28_R9, :L29_R9, :L31_R9, :L32_R9]] => Any[Any[:L10_R10, :L31_R10, :L32_R10, :L3_R10, :L4_R10], Any[:L29_R11, :L31_R11, :L32_R11, :L3_R11, :L4_R11]]
FAIL = ICMP(:p1_C23R6R10, 0.8, :unify0sn)
FAIL = ICMP(:p1_C23R6R10, 0.9, :unify0sn)
FAIL = ICMP(:p1_C23R6R10, 0.95, :unify0sn)
FAIL = ICMP(:p1_C23R6R10, 0.3, :unify0sn)
FAIL = ICMP(:p1_C23R6R10, 0.35, :unify0sn)
FAIL = ICMP(:p1_C22R10, 0.2, :unify0sn)
FAIL = ICMP(:p1_C22R10, 0.9, :unify0sn)
FAIL = ICMP(:p1_C22R10, 0.85, :unify0sn)
FAIL = ICMP(:p1_C22R10, 0.95, :unify0sn)
FAIL = ICMP(:p1_C22R10, 0.9, :unify0sn)
FAIL = ICMP(:p1_C23R9R11, 0.8, :unify0sn)
FAIL = ICMP(:p1_C23R9R11, 0.9, :unify0sn)
FAIL = ICMP(:p1_C23R9R11, 0.95, :unify0sn)
FAIL = ICMP(:p1_C23R9R11, 0.3, :unify0sn)
FAIL = ICMP(:p1_C23R9R11, 0.35, :unify0sn)
FAIL = ICMP(:p1_C22R11, 0.2, :unify0sn)
FAIL = ICMP(:p1_C22R11, 0.9, :unify0sn)
FAIL = ICMP(:p1_C22R11, 0.85, :unify0sn)
FAIL = ICMP(:p1_C22R11, 0.95, :unify0sn)
FAIL = ICMP(:p1_C22R11, 0.9, :unify0sn)
GOAL=>NEXT: Any[Any[:L10_R10, :L31_R10, :L32_R10, :L3_R10, :L4_R10], Any[:L29_R11, :L31_R11, :L32_R11, :L3_R11, :L4_R11]] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
  2.919913 seconds (6.77 M allocations: 338.227 MiB, 4.64% gc time)
(Any[], CORE("data/ml007.cnf", [23], [11], Dict{Any,Any}(:L31_R10=>LForm2(:L31_R10, :(-(Weapons(im_C22R10, p1_C23R6R10)))),:L29=>LForm2(:L29, :(-(ge(p2_C18, p1_C18)))),:L8_R1=>LForm2(:L8_R1, :(-(State(im_C17R1, battle, p1_C17R1)))),:L3_R11=>LForm2(:L3_R11, :(-(Eating(im_C22R11, p1_C22R11)))),:L2=>LForm2(:L2, :(+(Weapons(img4, 0.8)))),:L11=>LForm2(:L11, :(+(State0(im_C17, battle1)))),:L12=>LForm2(:L12, :(-(State(im_C21, violent, p1_C21)))),:L31_R6=>LForm2(:L31_R6, :(-(Weapons(im_C23R6, p1_C23R6)))),:L31=>LForm2(:L31, :(-(Weapons(im_C23, p1_C23)))),:L3_R8=>LForm2(:L3_R8, :(-(Eating(im_C22R8, p1_C22R8))))â€¦), Dict{Any,Any}(:C2=>VForm2(:C2, Any[]),:C10=>VForm2(:C10, Any[]),:R4=>VForm2(:R4, Symbol[:im_C19R4, :p1_C19R4]),:C22=>VForm2(:C22, Symbol[:im_C22, :p1_C22]),:R1=>VForm2(:R1, Symbol[:im_C17R1, :p1_C17R1, :p2_C17R1]),:C8=>VForm2(:C8, Any[]),:C1=>VForm2(:C1, Symbol[:IMG, :WHAT]),:R10=>VForm2(:R10, Symbol[:p1_C23R6R10, :p1_C22R10, :im_C22R10]),:C17=>VForm2(:C17, Symbol[:im_C17, :p1_C17, :p2_C17]),:C21=>VForm2(:C21, Symbol[:im_C21, :p1_C21])â€¦), Dict{Any,Any}(:C2=>Any[:L1],:C10=>Any[:L2],:R4=>Any[:L23_R4],:C22=>Any[:L3, :L4, :L5],:R1=>Any[:L8_R1, :L9_R1, :L10_R1],:C8=>Any[:L6],:C1=>Any[:L7],:R10=>Any[:L10_R10, :L31_R10, :L32_R10, :L3_R10, :L4_R10],:C17=>Any[:L8, :L9, :L10, :L11],:C21=>Any[:L12, :L13]â€¦), Dict{Any,Any}(:L31_R10=>:R10,:L29=>:C18,:L8_R1=>:R1,:L3_R11=>:R11,:L2=>:C10,:L11=>:C17,:L12=>:C21,:L31_R6=>:R6,:L31=>:C23,:L3_R8=>:R8â€¦), Any[:Eating, :ManyPeople, :State, :State0, :Weapons, :ge], Dict{Any,Any}(Symbol("-State")=>Any[Any[:C22, Symbol[:im_C22, :p1_C22], :L5, Any[:L3, :L4]], Any[:C23, Symbol[:im_C23, :p1_C23], :L33, Any[:L31, :L32]]],Symbol("+State")=>Any[Any[:C18, Symbol[:im_C18, :p1_C18, :p2_C18], :L28, Any[:L27, :L29, :L30]], Any[:C21, Symbol[:im_C21, :p1_C21], :L12, Any[:L13]], Any[:C17, Symbol[:im_C17, :p1_C17, :p2_C17], :L8, Any[:L9, :L10, :L11]], Any[:C18, Symbol[:im_C18, :p1_C18, :p2_C18], :L27, Any[:L28, :L29, :L30]], Any[:C19, Symbol[:im_C19, :p1_C19], :L23, Any[:L24]], Any[:C20, Symbol[:im_C20, :p1_C20], :L25, Any[:L26]], Any[:C17, Symbol[:im_C17, :p1_C17, :p2_C17], :L9, Any[:L8, :L10, :L11]]],Symbol("+Eating")=>Any[Any[:C22, Symbol[:im_C22, :p1_C22], :L3, Any[:L4, :L5]]],Symbol("+ManyPeople")=>Any[],Symbol("+Weapons")=>Any[Any[:C23, Symbol[:im_C23, :p1_C23], :L31, Any[:L32, :L33]]],Symbol("+State0")=>Any[Any[:C1, Symbol[:IMG, :WHAT], :L7, Any[]]],Symbol("-ManyPeople")=>Any[Any[:C2, Any[], :L1, Any[]], Any[:C11, Any[], :L14, Any[]], Any[:C14, Any[], :L20, Any[]], Any[:C5, Any[], :L17, Any[]], Any[:C8, Any[], :L6, Any[]]],Symbol("+ge")=>Any[Any[:C17, Symbol[:im_C17, :p1_C17, :p2_C17], :L10, Any[:L8, :L9, :L11]], Any[:C18, Symbol[:im_C18, :p1_C18, :p2_C18], :L29, Any[:L27, :L28, :L30]], Any[:C23, Symbol[:im_C23, :p1_C23], :L32, Any[:L31, :L33]], Any[:C22, Symbol[:im_C22, :p1_C22], :L4, Any[:L3, :L5]]],Symbol("-State0")=>Any[Any[:C17, Symbol[:im_C17, :p1_C17, :p2_C17], :L11, Any[:L8, :L9, :L10]], Any[:C21, Symbol[:im_C21, :p1_C21], :L13, Any[:L12]], Any[:C20, Symbol[:im_C20, :p1_C20], :L26, Any[:L25]], Any[:C19, Symbol[:im_C19, :p1_C19], :L24, Any[:L23]], Any[:C18, Symbol[:im_C18, :p1_C18, :p2_C18], :L30, Any[:L27, :L28, :L29]]],Symbol("-ge")=>Any[]â€¦), Dict{Any,Any}(:R4=>STEP(:R4, :L7, :L24, Symbol[:im_C19, :party2, :im_C19, :p1_C19], Array{Any,1}[[:im_C19, :p1_C19], [:im_C19R4, :p1_C19R4]]),:R1=>STEP(:R1, :L7, :L11, Symbol[:im_C17, :battle1, :im_C17, :p1_C17, :p2_C17], Array{Any,1}[[:im_C17, :p1_C17, :p2_C17], [:im_C17R1, :p1_C17R1, :p2_C17R1]]),:R10=>STEP(:R10, :L9_R6, :L5, Symbol[:im_C22, :p1_C22, :p1_C23R6, :im_C22, :p1_C22], Array{Any,1}[[:p1_C23R6, :p1_C22, :im_C22], [:p1_C23R6R10, :p1_C22R10, :im_C22R10]]),:R2=>STEP(:R2, :L7, :L13, Symbol[:im_C21, :violent2, :im_C21, :p1_C21], Array{Any,1}[[:im_C21, :p1_C21], [:im_C21R2, :p1_C21R2]]),:R5=>STEP(:R5, :L7, :L30, Symbol[:im_C18, :party1, :im_C18, :p1_C18, :p2_C18], Array{Any,1}[[:im_C18, :p1_C18, :p2_C18], [:im_C18R5, :p1_C18R5, :p2_C18R5]]),:R11=>STEP(:R11, :L28_R9, :L5, Symbol[:im_C22, :p1_C22, :p1_C23R9, :im_C22, :p1_C22], Array{Any,1}[[:p1_C22, :p1_C23R9, :im_C22], [:p1_C22R11, :p1_C23R9R11, :im_C22R11]]),:R7=>STEP(:R7, :L25_R3, :L33, Symbol[:im_C23, :p1_C23, :im_C23, :p1_C23], Array{Any,1}[[:im_C23, :p1_C23], [:im_C23R7, :p1_C23R7]]),:R9=>STEP(:R9, :L27_R5, :L33, Symbol[:im_C23, :p1_C23, :p2_C18R5, :im_C23, :p1_C23], Array{Any,1}[[:im_C23, :p2_C18R5, :p1_C23], [:im_C23R9, :p2_C18R5R9, :p1_C23R9]]),:R3=>STEP(:R3, :L7, :L26, Symbol[:im_C20, :battle2, :im_C20, :p1_C20], Array{Any,1}[[:im_C20, :p1_C20], [:im_C20R3, :p1_C20R3]]),:R6=>STEP(:R6, :L8_R1, :L33, Symbol[:im_C23, :p1_C23, :p2_C17R1, :im_C23, :p1_C23], Array{Any,1}[[:im_C23, :p2_C17R1, :p1_C23], [:im_C23R6, :p2_C17R1R6, :p1_C23R6]])â€¦), Any["ge(x,y)   = x>=y", "gt(x,y)   = x>y", "le(x,y)   = x<=y", "lt(x,y)   = x<y", "eq(x,y)   = x==y", "between(x,low,high) = (low<=x && x<high)", "between2(low,x,high) = (low<=x && x<high)", "times(x,y) = x*y", "add(x,y)  = x+y", "pred(x) = x-1", "succ(x) = x+1"], [49], [11]))

julia> 
