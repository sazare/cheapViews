julia> include("load_naivelogic.jl")
... naivelogic is loaded

julia> @time rml007,cml007 = simpleprover("data/ml007.cnf",50,20)
readcore fname=data/ml007.cnf
vars = Symbol[:IMG, :WHAT, :im_C17, :p1_C17, :p2_C17]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(State(im_C17, battle, p1_C17))), :(-(State(im_C17, party, p2_C17))), :(-(ge(p1_C17, p2_C17)))])
(lid, lit) = (:L8_R1, :(-(State(im_C17, battle, p1_C17))))
(:leval, lit) = (:leval, :(-(State(im_C17, battle, p1_C17))))
val = :(-(State(im_C17, battle, p1_C17)))
(lid, lit) = (:L9_R1, :(-(State(im_C17, party, p2_C17))))
(:leval, lit) = (:leval, :(-(State(im_C17, party, p2_C17))))
val = :(-(State(im_C17, party, p2_C17)))
(lid, lit) = (:L10_R1, :(-(ge(p1_C17, p2_C17))))
(:leval, lit) = (:leval, :(-(ge(p1_C17, p2_C17))))
val = :(-(ge(p1_C17, p2_C17)))
rb = (Any[:L8_R1, :L9_R1, :L10_R1], Any[:(-(State(im_C17, battle, p1_C17))), :(-(State(im_C17, party, p2_C17))), :(-(ge(p1_C17, p2_C17)))])
vars = Symbol[:IMG, :WHAT, :im_C21, :p1_C21]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(State(im_C21, violent, p1_C21)))])
(lid, lit) = (:L12_R2, :(-(State(im_C21, violent, p1_C21))))
(:leval, lit) = (:leval, :(-(State(im_C21, violent, p1_C21))))
val = :(-(State(im_C21, violent, p1_C21)))
rb = (Any[:L12_R2], Any[:(-(State(im_C21, violent, p1_C21)))])
vars = Symbol[:IMG, :WHAT, :im_C20, :p1_C20]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(State(im_C20, battle, p1_C20)))])
(lid, lit) = (:L25_R3, :(-(State(im_C20, battle, p1_C20))))
(:leval, lit) = (:leval, :(-(State(im_C20, battle, p1_C20))))
val = :(-(State(im_C20, battle, p1_C20)))
rb = (Any[:L25_R3], Any[:(-(State(im_C20, battle, p1_C20)))])
vars = Symbol[:IMG, :WHAT, :im_C19, :p1_C19]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(State(im_C19, party, p1_C19)))])
(lid, lit) = (:L23_R4, :(-(State(im_C19, party, p1_C19))))
(:leval, lit) = (:leval, :(-(State(im_C19, party, p1_C19))))
val = :(-(State(im_C19, party, p1_C19)))
rb = (Any[:L23_R4], Any[:(-(State(im_C19, party, p1_C19)))])
vars = Symbol[:IMG, :WHAT, :im_C18, :p1_C18, :p2_C18]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(State(im_C18, battle, p1_C18))), :(-(State(im_C18, party, p2_C18))), :(-(ge(p2_C18, p1_C18)))])
(lid, lit) = (:L27_R5, :(-(State(im_C18, battle, p1_C18))))
(:leval, lit) = (:leval, :(-(State(im_C18, battle, p1_C18))))
val = :(-(State(im_C18, battle, p1_C18)))
(lid, lit) = (:L28_R5, :(-(State(im_C18, party, p2_C18))))
(:leval, lit) = (:leval, :(-(State(im_C18, party, p2_C18))))
val = :(-(State(im_C18, party, p2_C18)))
(lid, lit) = (:L29_R5, :(-(ge(p2_C18, p1_C18))))
(:leval, lit) = (:leval, :(-(ge(p2_C18, p1_C18))))
val = :(-(ge(p2_C18, p1_C18)))
rb = (Any[:L27_R5, :L28_R5, :L29_R5], Any[:(-(State(im_C18, battle, p1_C18))), :(-(State(im_C18, party, p2_C18))), :(-(ge(p2_C18, p1_C18)))])
GOAL=>NEXT: Array{Any,1}[[:L7]] => Any[Any[:L8_R1, :L9_R1, :L10_R1], Any[:L12_R2], Any[:L25_R3], Any[:L23_R4], Any[:L27_R5, :L28_R5, :L29_R5]]
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:battle, :party, :directionaa)
vars = Symbol[:im_C17R1, :p1_C17R1, :p2_C17R1, :im_C23, :p1_C23]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(State(im_C23, party, p2_C17R1))), :(-(ge(p1_C23, p2_C17R1))), :(-(Weapons(im_C23, p1_C23))), :(-(ge(p1_C23, 0.8)))])
(lid, lit) = (:L9_R6, :(-(State(im_C23, party, p2_C17R1))))
(:leval, lit) = (:leval, :(-(State(im_C23, party, p2_C17R1))))
val = :(-(State(im_C23, party, p2_C17R1)))
(lid, lit) = (:L10_R6, :(-(ge(p1_C23, p2_C17R1))))
(:leval, lit) = (:leval, :(-(ge(p1_C23, p2_C17R1))))
val = :(-(ge(p1_C23, p2_C17R1)))
(lid, lit) = (:L31_R6, :(-(Weapons(im_C23, p1_C23))))
(:leval, lit) = (:leval, :(-(Weapons(im_C23, p1_C23))))
val = :(-(Weapons(im_C23, p1_C23)))
(lid, lit) = (:L32_R6, :(-(ge(p1_C23, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C23, 0.8))))
val = :(-(ge(p1_C23, 0.8)))
rb = (Any[:L9_R6, :L10_R6, :L31_R6, :L32_R6], Any[:(-(State(im_C23, party, p2_C17R1))), :(-(ge(p1_C23, p2_C17R1))), :(-(Weapons(im_C23, p1_C23))), :(-(ge(p1_C23, 0.8)))])
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:violent, :party, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:violent, :battle, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:battle, :party, :directionaa)
vars = Symbol[:im_C20R3, :p1_C20R3, :im_C23, :p1_C23]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(Weapons(im_C23, p1_C23))), :(-(ge(p1_C23, 0.8)))])
(lid, lit) = (:L31_R7, :(-(Weapons(im_C23, p1_C23))))
(:leval, lit) = (:leval, :(-(Weapons(im_C23, p1_C23))))
val = :(-(Weapons(im_C23, p1_C23)))
(lid, lit) = (:L32_R7, :(-(ge(p1_C23, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C23, 0.8))))
val = :(-(ge(p1_C23, 0.8)))
rb = (Any[:L31_R7, :L32_R7], Any[:(-(Weapons(im_C23, p1_C23))), :(-(ge(p1_C23, 0.8)))])
vars = Symbol[:im_C19R4, :p1_C19R4, :im_C22, :p1_C22]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(Eating(im_C22, p1_C22))), :(-(ge(p1_C22, 0.8)))])
(lid, lit) = (:L3_R8, :(-(Eating(im_C22, p1_C22))))
(:leval, lit) = (:leval, :(-(Eating(im_C22, p1_C22))))
val = :(-(Eating(im_C22, p1_C22)))
(lid, lit) = (:L4_R8, :(-(ge(p1_C22, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22, 0.8))))
val = :(-(ge(p1_C22, 0.8)))
rb = (Any[:L3_R8, :L4_R8], Any[:(-(Eating(im_C22, p1_C22))), :(-(ge(p1_C22, 0.8)))])
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:party, :battle, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:battle, :party, :directionaa)
vars = Symbol[:im_C18R5, :p1_C18R5, :p2_C18R5, :im_C23, :p1_C23]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(State(im_C23, party, p2_C18R5))), :(-(ge(p2_C18R5, p1_C23))), :(-(Weapons(im_C23, p1_C23))), :(-(ge(p1_C23, 0.8)))])
(lid, lit) = (:L28_R9, :(-(State(im_C23, party, p2_C18R5))))
(:leval, lit) = (:leval, :(-(State(im_C23, party, p2_C18R5))))
val = :(-(State(im_C23, party, p2_C18R5)))
(lid, lit) = (:L29_R9, :(-(ge(p2_C18R5, p1_C23))))
(:leval, lit) = (:leval, :(-(ge(p2_C18R5, p1_C23))))
val = :(-(ge(p2_C18R5, p1_C23)))
(lid, lit) = (:L31_R9, :(-(Weapons(im_C23, p1_C23))))
(:leval, lit) = (:leval, :(-(Weapons(im_C23, p1_C23))))
val = :(-(Weapons(im_C23, p1_C23)))
(lid, lit) = (:L32_R9, :(-(ge(p1_C23, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C23, 0.8))))
val = :(-(ge(p1_C23, 0.8)))
rb = (Any[:L28_R9, :L29_R9, :L31_R9, :L32_R9], Any[:(-(State(im_C23, party, p2_C18R5))), :(-(ge(p2_C18R5, p1_C23))), :(-(Weapons(im_C23, p1_C23))), :(-(ge(p1_C23, 0.8)))])
GOAL=>NEXT: Any[Any[:L8_R1, :L9_R1, :L10_R1], Any[:L12_R2], Any[:L25_R3], Any[:L23_R4], Any[:L27_R5, :L28_R5, :L29_R5]] => Any[Any[:L9_R6, :L10_R6, :L31_R6, :L32_R6], Any[:L31_R7, :L32_R7], Any[:L3_R8, :L4_R8], Any[:L28_R9, :L29_R9, :L31_R9, :L32_R9]]
vars = Symbol[:im_C23R6, :p2_C17R1R6, :p1_C23R6, :im_C22, :p1_C22]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(p1_C23R6, p1_C22))), :(-(Weapons(im_C22, p1_C23R6))), :(-(ge(p1_C23R6, 0.8))), :(-(Eating(im_C22, p1_C22))), :(-(ge(p1_C22, 0.8)))])
(lid, lit) = (:L10_R10, :(-(ge(p1_C23R6, p1_C22))))
(:leval, lit) = (:leval, :(-(ge(p1_C23R6, p1_C22))))
val = :(-(ge(p1_C23R6, p1_C22)))
(lid, lit) = (:L31_R10, :(-(Weapons(im_C22, p1_C23R6))))
(:leval, lit) = (:leval, :(-(Weapons(im_C22, p1_C23R6))))
val = :(-(Weapons(im_C22, p1_C23R6)))
(lid, lit) = (:L32_R10, :(-(ge(p1_C23R6, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C23R6, 0.8))))
val = :(-(ge(p1_C23R6, 0.8)))
(lid, lit) = (:L3_R10, :(-(Eating(im_C22, p1_C22))))
(:leval, lit) = (:leval, :(-(Eating(im_C22, p1_C22))))
val = :(-(Eating(im_C22, p1_C22)))
(lid, lit) = (:L4_R10, :(-(ge(p1_C22, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22, 0.8))))
val = :(-(ge(p1_C22, 0.8)))
rb = (Any[:L10_R10, :L31_R10, :L32_R10, :L3_R10, :L4_R10], Any[:(-(ge(p1_C23R6, p1_C22))), :(-(Weapons(im_C22, p1_C23R6))), :(-(ge(p1_C23R6, 0.8))), :(-(Eating(im_C22, p1_C22))), :(-(ge(p1_C22, 0.8)))])
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:party, :battle, :directionaa)
vars = Any[:im_C23R7, :p1_C23R7]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.8, 0.8)))])
(lid, lit) = (:L32_R11, :(-(ge(0.8, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.8, 0.8))))
val = false
rb = (Any[], Any[])
vars = Any[:im_C23R7, :p1_C23R7]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.9, 0.8)))])
(lid, lit) = (:L32_R12, :(-(ge(0.9, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.9, 0.8))))
val = false
rb = (Any[], Any[])
vars = Any[:im_C23R7, :p1_C23R7]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.95, 0.8)))])
(lid, lit) = (:L32_R13, :(-(ge(0.95, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.95, 0.8))))
val = false
rb = (Any[], Any[])
vars = Any[:im_C23R7, :p1_C23R7]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.3, 0.8)))])
(lid, lit) = (:L32_R14, :(-(ge(0.3, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.3, 0.8))))
val = true
rb = (true, true)
Valid
vars = Any[:im_C23R7, :p1_C23R7]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.35, 0.8)))])
(lid, lit) = (:L32_R15, :(-(ge(0.35, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.35, 0.8))))
val = true
rb = (true, true)
Valid
vars = Any[:im_C22R8, :p1_C22R8]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.2, 0.8)))])
(lid, lit) = (:L4_R16, :(-(ge(0.2, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.2, 0.8))))
val = true
rb = (true, true)
Valid
vars = Any[:im_C22R8, :p1_C22R8]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.9, 0.8)))])
(lid, lit) = (:L4_R17, :(-(ge(0.9, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.9, 0.8))))
val = false
rb = (Any[], Any[])
vars = Any[:im_C22R8, :p1_C22R8]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.85, 0.8)))])
(lid, lit) = (:L4_R18, :(-(ge(0.85, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.85, 0.8))))
val = false
rb = (Any[], Any[])
vars = Any[:im_C22R8, :p1_C22R8]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.95, 0.8)))])
(lid, lit) = (:L4_R19, :(-(ge(0.95, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.95, 0.8))))
val = false
rb = (Any[], Any[])
vars = Any[:im_C22R8, :p1_C22R8]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.9, 0.8)))])
(lid, lit) = (:L4_R20, :(-(ge(0.9, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.9, 0.8))))
val = false
rb = (Any[], Any[])
vars = Symbol[:im_C23R9, :p2_C18R5R9, :p1_C23R9, :im_C22, :p1_C22]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(p1_C22, p1_C23R9))), :(-(Weapons(im_C22, p1_C23R9))), :(-(ge(p1_C23R9, 0.8))), :(-(Eating(im_C22, p1_C22))), :(-(ge(p1_C22, 0.8)))])
(lid, lit) = (:L29_R21, :(-(ge(p1_C22, p1_C23R9))))
(:leval, lit) = (:leval, :(-(ge(p1_C22, p1_C23R9))))
val = :(-(ge(p1_C22, p1_C23R9)))
(lid, lit) = (:L31_R21, :(-(Weapons(im_C22, p1_C23R9))))
(:leval, lit) = (:leval, :(-(Weapons(im_C22, p1_C23R9))))
val = :(-(Weapons(im_C22, p1_C23R9)))
(lid, lit) = (:L32_R21, :(-(ge(p1_C23R9, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C23R9, 0.8))))
val = :(-(ge(p1_C23R9, 0.8)))
(lid, lit) = (:L3_R21, :(-(Eating(im_C22, p1_C22))))
(:leval, lit) = (:leval, :(-(Eating(im_C22, p1_C22))))
val = :(-(Eating(im_C22, p1_C22)))
(lid, lit) = (:L4_R21, :(-(ge(p1_C22, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22, 0.8))))
val = :(-(ge(p1_C22, 0.8)))
rb = (Any[:L29_R21, :L31_R21, :L32_R21, :L3_R21, :L4_R21], Any[:(-(ge(p1_C22, p1_C23R9))), :(-(Weapons(im_C22, p1_C23R9))), :(-(ge(p1_C23R9, 0.8))), :(-(Eating(im_C22, p1_C22))), :(-(ge(p1_C22, 0.8)))])
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:party, :battle, :directionaa)
GOAL=>NEXT: Any[Any[:L9_R6, :L10_R6, :L31_R6, :L32_R6], Any[:L31_R7, :L32_R7], Any[:L3_R8, :L4_R8], Any[:L28_R9, :L29_R9, :L31_R9, :L32_R9]] => Any[Any[:L10_R10, :L31_R10, :L32_R10, :L3_R10, :L4_R10], Any[], Any[], Any[], Any[], Any[], Any[], Any[], Any[:L29_R21, :L31_R21, :L32_R21, :L3_R21, :L4_R21]]
vars = Any[:p1_C23R6R10, :p1_C22R10, :im_C22R10]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.8, p1_C22R10))), :(-(ge(0.8, 0.8))), :(-(Eating(img4, p1_C22R10))), :(-(ge(p1_C22R10, 0.8)))])
(lid, lit) = (:L10_R22, :(-(ge(0.8, p1_C22R10))))
(:leval, lit) = (:leval, :(-(ge(0.8, p1_C22R10))))
val = :(-(ge(0.8, p1_C22R10)))
(lid, lit) = (:L32_R22, :(-(ge(0.8, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.8, 0.8))))
val = false
(lid, lit) = (:L3_R22, :(-(Eating(img4, p1_C22R10))))
(:leval, lit) = (:leval, :(-(Eating(img4, p1_C22R10))))
val = :(-(Eating(img4, p1_C22R10)))
(lid, lit) = (:L4_R22, :(-(ge(p1_C22R10, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R10, 0.8))))
val = :(-(ge(p1_C22R10, 0.8)))
rb = (Any[:L10_R22, :L3_R22, :L4_R22], Any[:(-(ge(0.8, p1_C22R10))), :(-(Eating(img4, p1_C22R10))), :(-(ge(p1_C22R10, 0.8)))])
vars = Any[:p1_C23R6R10, :p1_C22R10, :im_C22R10]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.9, p1_C22R10))), :(-(ge(0.9, 0.8))), :(-(Eating(img5, p1_C22R10))), :(-(ge(p1_C22R10, 0.8)))])
(lid, lit) = (:L10_R23, :(-(ge(0.9, p1_C22R10))))
(:leval, lit) = (:leval, :(-(ge(0.9, p1_C22R10))))
val = :(-(ge(0.9, p1_C22R10)))
(lid, lit) = (:L32_R23, :(-(ge(0.9, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.9, 0.8))))
val = false
(lid, lit) = (:L3_R23, :(-(Eating(img5, p1_C22R10))))
(:leval, lit) = (:leval, :(-(Eating(img5, p1_C22R10))))
val = :(-(Eating(img5, p1_C22R10)))
(lid, lit) = (:L4_R23, :(-(ge(p1_C22R10, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R10, 0.8))))
val = :(-(ge(p1_C22R10, 0.8)))
rb = (Any[:L10_R23, :L3_R23, :L4_R23], Any[:(-(ge(0.9, p1_C22R10))), :(-(Eating(img5, p1_C22R10))), :(-(ge(p1_C22R10, 0.8)))])
vars = Any[:p1_C23R6R10, :p1_C22R10, :im_C22R10]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.95, p1_C22R10))), :(-(ge(0.95, 0.8))), :(-(Eating(img3, p1_C22R10))), :(-(ge(p1_C22R10, 0.8)))])
(lid, lit) = (:L10_R24, :(-(ge(0.95, p1_C22R10))))
(:leval, lit) = (:leval, :(-(ge(0.95, p1_C22R10))))
val = :(-(ge(0.95, p1_C22R10)))
(lid, lit) = (:L32_R24, :(-(ge(0.95, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.95, 0.8))))
val = false
(lid, lit) = (:L3_R24, :(-(Eating(img3, p1_C22R10))))
(:leval, lit) = (:leval, :(-(Eating(img3, p1_C22R10))))
val = :(-(Eating(img3, p1_C22R10)))
(lid, lit) = (:L4_R24, :(-(ge(p1_C22R10, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R10, 0.8))))
val = :(-(ge(p1_C22R10, 0.8)))
rb = (Any[:L10_R24, :L3_R24, :L4_R24], Any[:(-(ge(0.95, p1_C22R10))), :(-(Eating(img3, p1_C22R10))), :(-(ge(p1_C22R10, 0.8)))])
vars = Any[:p1_C23R6R10, :p1_C22R10, :im_C22R10]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.3, p1_C22R10))), :(-(ge(0.3, 0.8))), :(-(Eating(img2, p1_C22R10))), :(-(ge(p1_C22R10, 0.8)))])
(lid, lit) = (:L10_R25, :(-(ge(0.3, p1_C22R10))))
(:leval, lit) = (:leval, :(-(ge(0.3, p1_C22R10))))
val = :(-(ge(0.3, p1_C22R10)))
(lid, lit) = (:L32_R25, :(-(ge(0.3, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.3, 0.8))))
val = true
rb = (true, true)
Valid
vars = Any[:p1_C23R6R10, :p1_C22R10, :im_C22R10]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.35, p1_C22R10))), :(-(ge(0.35, 0.8))), :(-(Eating(img1, p1_C22R10))), :(-(ge(p1_C22R10, 0.8)))])
(lid, lit) = (:L10_R26, :(-(ge(0.35, p1_C22R10))))
(:leval, lit) = (:leval, :(-(ge(0.35, p1_C22R10))))
val = :(-(ge(0.35, p1_C22R10)))
(lid, lit) = (:L32_R26, :(-(ge(0.35, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.35, 0.8))))
val = true
rb = (true, true)
Valid
vars = Any[:p1_C22R21, :p1_C23R9R21, :im_C22R21]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(p1_C22R21, 0.8))), :(-(ge(0.8, 0.8))), :(-(Eating(img4, p1_C22R21))), :(-(ge(p1_C22R21, 0.8)))])
(lid, lit) = (:L29_R27, :(-(ge(p1_C22R21, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R21, 0.8))))
val = :(-(ge(p1_C22R21, 0.8)))
(lid, lit) = (:L32_R27, :(-(ge(0.8, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.8, 0.8))))
val = false
(lid, lit) = (:L3_R27, :(-(Eating(img4, p1_C22R21))))
(:leval, lit) = (:leval, :(-(Eating(img4, p1_C22R21))))
val = :(-(Eating(img4, p1_C22R21)))
(lid, lit) = (:L4_R27, :(-(ge(p1_C22R21, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R21, 0.8))))
val = :(-(ge(p1_C22R21, 0.8)))
rb = (Any[:L29_R27, :L3_R27, :L4_R27], Any[:(-(ge(p1_C22R21, 0.8))), :(-(Eating(img4, p1_C22R21))), :(-(ge(p1_C22R21, 0.8)))])
vars = Any[:p1_C22R21, :p1_C23R9R21, :im_C22R21]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(p1_C22R21, 0.9))), :(-(ge(0.9, 0.8))), :(-(Eating(img5, p1_C22R21))), :(-(ge(p1_C22R21, 0.8)))])
(lid, lit) = (:L29_R28, :(-(ge(p1_C22R21, 0.9))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R21, 0.9))))
val = :(-(ge(p1_C22R21, 0.9)))
(lid, lit) = (:L32_R28, :(-(ge(0.9, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.9, 0.8))))
val = false
(lid, lit) = (:L3_R28, :(-(Eating(img5, p1_C22R21))))
(:leval, lit) = (:leval, :(-(Eating(img5, p1_C22R21))))
val = :(-(Eating(img5, p1_C22R21)))
(lid, lit) = (:L4_R28, :(-(ge(p1_C22R21, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R21, 0.8))))
val = :(-(ge(p1_C22R21, 0.8)))
rb = (Any[:L29_R28, :L3_R28, :L4_R28], Any[:(-(ge(p1_C22R21, 0.9))), :(-(Eating(img5, p1_C22R21))), :(-(ge(p1_C22R21, 0.8)))])
vars = Any[:p1_C22R21, :p1_C23R9R21, :im_C22R21]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(p1_C22R21, 0.95))), :(-(ge(0.95, 0.8))), :(-(Eating(img3, p1_C22R21))), :(-(ge(p1_C22R21, 0.8)))])
(lid, lit) = (:L29_R29, :(-(ge(p1_C22R21, 0.95))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R21, 0.95))))
val = :(-(ge(p1_C22R21, 0.95)))
(lid, lit) = (:L32_R29, :(-(ge(0.95, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.95, 0.8))))
val = false
(lid, lit) = (:L3_R29, :(-(Eating(img3, p1_C22R21))))
(:leval, lit) = (:leval, :(-(Eating(img3, p1_C22R21))))
val = :(-(Eating(img3, p1_C22R21)))
(lid, lit) = (:L4_R29, :(-(ge(p1_C22R21, 0.8))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R21, 0.8))))
val = :(-(ge(p1_C22R21, 0.8)))
rb = (Any[:L29_R29, :L3_R29, :L4_R29], Any[:(-(ge(p1_C22R21, 0.95))), :(-(Eating(img3, p1_C22R21))), :(-(ge(p1_C22R21, 0.8)))])
vars = Any[:p1_C22R21, :p1_C23R9R21, :im_C22R21]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(p1_C22R21, 0.3))), :(-(ge(0.3, 0.8))), :(-(Eating(img2, p1_C22R21))), :(-(ge(p1_C22R21, 0.8)))])
(lid, lit) = (:L29_R30, :(-(ge(p1_C22R21, 0.3))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R21, 0.3))))
val = :(-(ge(p1_C22R21, 0.3)))
(lid, lit) = (:L32_R30, :(-(ge(0.3, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.3, 0.8))))
val = true
rb = (true, true)
Valid
vars = Any[:p1_C22R21, :p1_C23R9R21, :im_C22R21]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(p1_C22R21, 0.35))), :(-(ge(0.35, 0.8))), :(-(Eating(img1, p1_C22R21))), :(-(ge(p1_C22R21, 0.8)))])
(lid, lit) = (:L29_R31, :(-(ge(p1_C22R21, 0.35))))
(:leval, lit) = (:leval, :(-(ge(p1_C22R21, 0.35))))
val = :(-(ge(p1_C22R21, 0.35)))
(lid, lit) = (:L32_R31, :(-(ge(0.35, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.35, 0.8))))
val = true
rb = (true, true)
Valid
GOAL=>NEXT: Any[Any[:L10_R10, :L31_R10, :L32_R10, :L3_R10, :L4_R10], Any[], Any[], Any[], Any[], Any[], Any[], Any[], Any[:L29_R21, :L31_R21, :L32_R21, :L3_R21, :L4_R21]] => Any[Any[:L10_R22, :L3_R22, :L4_R22], Any[:L10_R23, :L3_R23, :L4_R23], Any[:L10_R24, :L3_R24, :L4_R24], Any[:L29_R27, :L3_R27, :L4_R27], Any[:L29_R28, :L3_R28, :L4_R28], Any[:L29_R29, :L3_R29, :L4_R29]]
vars = Any[:p1_C22R10R22]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.8, 0.2))), :(-(ge(0.2, 0.8)))])
(lid, lit) = (:L10_R32, :(-(ge(0.8, 0.2))))
(:leval, lit) = (:leval, :(-(ge(0.8, 0.2))))
val = false
(lid, lit) = (:L4_R32, :(-(ge(0.2, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.2, 0.8))))
val = true
rb = (true, true)
Valid
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img4, :img3, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img4, :img1, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img4, :img5, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img4, :img2, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img5, :img4, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img5, :img3, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img5, :img1, :directionaa)
vars = Any[:p1_C22R10R23]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.9, 0.95))), :(-(ge(0.95, 0.8)))])
(lid, lit) = (:L10_R33, :(-(ge(0.9, 0.95))))
(:leval, lit) = (:leval, :(-(ge(0.9, 0.95))))
val = true
rb = (true, true)
Valid
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img5, :img2, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img3, :img4, :directionaa)
vars = Any[:p1_C22R10R24]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.95, 0.9))), :(-(ge(0.9, 0.8)))])
(lid, lit) = (:L10_R34, :(-(ge(0.95, 0.9))))
(:leval, lit) = (:leval, :(-(ge(0.95, 0.9))))
val = false
(lid, lit) = (:L4_R34, :(-(ge(0.9, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.9, 0.8))))
val = false
rb = (Any[], Any[])
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img3, :img1, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img3, :img5, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img3, :img2, :directionaa)
vars = Any[:p1_C22R21R27]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.2, 0.8))), :(-(ge(0.2, 0.8)))])
(lid, lit) = (:L29_R35, :(-(ge(0.2, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.2, 0.8))))
val = true
rb = (true, true)
Valid
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img4, :img3, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img4, :img1, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img4, :img5, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img4, :img2, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img5, :img4, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img5, :img3, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img5, :img1, :directionaa)
vars = Any[:p1_C22R21R28]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.95, 0.9))), :(-(ge(0.95, 0.8)))])
(lid, lit) = (:L29_R36, :(-(ge(0.95, 0.9))))
(:leval, lit) = (:leval, :(-(ge(0.95, 0.9))))
val = false
(lid, lit) = (:L4_R36, :(-(ge(0.95, 0.8))))
(:leval, lit) = (:leval, :(-(ge(0.95, 0.8))))
val = false
rb = (Any[], Any[])
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img5, :img2, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img3, :img4, :directionaa)
vars = Any[:p1_C22R21R29]
(:evaluate_literals, lits) = (:evaluate_literals, Expr[:(-(ge(0.9, 0.95))), :(-(ge(0.9, 0.8)))])
(lid, lit) = (:L29_R37, :(-(ge(0.9, 0.95))))
(:leval, lit) = (:leval, :(-(ge(0.9, 0.95))))
val = true
rb = (true, true)
Valid
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img3, :img1, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img3, :img5, :directionaa)
(typeof(t1), typeof(t2)) = (Symbol, Symbol)
FAIL = ICMP(:img3, :img2, :directionaa)
GOAL=>NEXT: Any[Any[:L10_R22, :L3_R22, :L4_R22], Any[:L10_R23, :L3_R23, :L4_R23], Any[:L10_R24, :L3_R24, :L4_R24], Any[:L29_R27, :L3_R27, :L4_R27], Any[:L29_R28, :L3_R28, :L4_R28], Any[:L29_R29, :L3_R29, :L4_R29]] => Any[Any[], Any[]]
GOAL=>NEXT: Any[Any[], Any[]] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
GOAL=>NEXT: Any[] => Any[]
  2.728308 seconds (5.89 M allocations: 295.076 MiB, 2.97% gc time)
(Any[:R13, :R11, :R34, :R36, :R18, :R12, :R17, :R20, :R19], CORE("data/ml007.cnf", [23], [37], Dict{Any,Any}(:L31_R10=>LForm2(:L31_R10, :(-(Weapons(im_C22R10, p1_C23R6R10)))),:L29=>LForm2(:L29, :(-(ge(p2_C18, p1_C18)))),:L8_R1=>LForm2(:L8_R1, :(-(State(im_C17R1, battle, p1_C17R1)))),:L4_R18=>LForm2(:L4_R18, :(-(ge(p1_C22R8R18, 0.8)))),:L2=>LForm2(:L2, :(+(Weapons(img4, 0.8)))),:L11=>LForm2(:L11, :(+(State0(im_C17, battle1)))),:L12=>LForm2(:L12, :(-(State(im_C21, violent, p1_C21)))),:L32_R12=>LForm2(:L32_R12, :(-(ge(p1_C23R7R12, 0.8)))),:L31_R6=>LForm2(:L31_R6, :(-(Weapons(im_C23R6, p1_C23R6)))),:L3_R27=>LForm2(:L3_R27, :(-(Eating(img4, p1_C22R21R27))))…), Dict{Any,Any}(:C10=>VForm2(:C10, Any[]),:R13=>VForm2(:R13, Any[]),:C22=>VForm2(:C22, Symbol[:im_C22, :p1_C22]),:C13=>VForm2(:C13, Any[]),:R11=>VForm2(:R11, Any[]),:R22=>VForm2(:R22, Symbol[:p1_C22R10R22]),:C16=>VForm2(:C16, Any[]),:C14=>VForm2(:C14, Any[]),:C19=>VForm2(:C19, Symbol[:im_C19, :p1_C19]),:C18=>VForm2(:C18, Symbol[:im_C18, :p1_C18, :p2_C18])…), Dict{Any,Any}(:C10=>Any[:L2],:R13=>Any[],:C22=>Any[:L3, :L4, :L5],:C13=>Any[:L15],:R11=>Any[],:R22=>Any[:L10_R22, :L3_R22, :L4_R22],:C16=>Any[:L19],:C14=>Any[:L20],:C19=>Any[:L23, :L24],:C18=>Any[:L27, :L28, :L29, :L30]…), Dict{Any,Any}(:L31_R10=>:R10,:L29=>:C18,:L8_R1=>:R1,:L2=>:C10,:L11=>:C17,:L12=>:C21,:L31_R6=>:R6,:L3_R27=>:R27,:L4_R29=>:R29,:L31=>:C23…), Any[:Eating, :ManyPeople, :State, :State0, :Weapons, :ge], Dict{Any,Any}(Symbol("-State")=>Any[Any[:C22, Symbol[:im_C22, :p1_C22], :L5, Any[:L3, :L4]], Any[:C23, Symbol[:im_C23, :p1_C23], :L33, Any[:L31, :L32]]],Symbol("+State")=>Any[Any[:C18, Symbol[:im_C18, :p1_C18, :p2_C18], :L28, Any[:L27, :L29, :L30]], Any[:C21, Symbol[:im_C21, :p1_C21], :L12, Any[:L13]], Any[:C17, Symbol[:im_C17, :p1_C17, :p2_C17], :L8, Any[:L9, :L10, :L11]], Any[:C18, Symbol[:im_C18, :p1_C18, :p2_C18], :L27, Any[:L28, :L29, :L30]], Any[:C19, Symbol[:im_C19, :p1_C19], :L23, Any[:L24]], Any[:C20, Symbol[:im_C20, :p1_C20], :L25, Any[:L26]], Any[:C17, Symbol[:im_C17, :p1_C17, :p2_C17], :L9, Any[:L8, :L10, :L11]]],Symbol("+Eating")=>Any[Any[:C22, Symbol[:im_C22, :p1_C22], :L3, Any[:L4, :L5]]],Symbol("+ManyPeople")=>Any[],Symbol("+Weapons")=>Any[Any[:C23, Symbol[:im_C23, :p1_C23], :L31, Any[:L32, :L33]]],Symbol("+State0")=>Any[Any[:C1, Symbol[:IMG, :WHAT], :L7, Any[]]],Symbol("-ManyPeople")=>Any[Any[:C2, Any[], :L1, Any[]], Any[:C11, Any[], :L14, Any[]], Any[:C14, Any[], :L20, Any[]], Any[:C5, Any[], :L17, Any[]], Any[:C8, Any[], :L6, Any[]]],Symbol("+ge")=>Any[Any[:C17, Symbol[:im_C17, :p1_C17, :p2_C17], :L10, Any[:L8, :L9, :L11]], Any[:C18, Symbol[:im_C18, :p1_C18, :p2_C18], :L29, Any[:L27, :L28, :L30]], Any[:C23, Symbol[:im_C23, :p1_C23], :L32, Any[:L31, :L33]], Any[:C22, Symbol[:im_C22, :p1_C22], :L4, Any[:L3, :L5]]],Symbol("-State0")=>Any[Any[:C17, Symbol[:im_C17, :p1_C17, :p2_C17], :L11, Any[:L8, :L9, :L10]], Any[:C21, Symbol[:im_C21, :p1_C21], :L13, Any[:L12]], Any[:C20, Symbol[:im_C20, :p1_C20], :L26, Any[:L25]], Any[:C19, Symbol[:im_C19, :p1_C19], :L24, Any[:L23]], Any[:C18, Symbol[:im_C18, :p1_C18, :p2_C18], :L30, Any[:L27, :L28, :L29]]],Symbol("-ge")=>Any[]…), Dict{Any,Any}(:R13=>STEP(:R13, :L31_R7, :L15, Any[:img3, 0.95], Array{Any,1}[[], []]),:R4=>STEP(:R4, :L7, :L24, Symbol[:im_C19, :party2, :im_C19, :p1_C19], Array{Any,1}[[:im_C19, :p1_C19], [:im_C19R4, :p1_C19R4]]),:R1=>STEP(:R1, :L7, :L11, Symbol[:im_C17, :battle1, :im_C17, :p1_C17, :p2_C17], Array{Any,1}[[:im_C17, :p1_C17, :p2_C17], [:im_C17R1, :p1_C17R1, :p2_C17R1]]),:R28=>STEP(:R28, :L31_R21, :L19, Any[:p1_C22R21, 0.9, :img5], Array{Any,1}[[:p1_C22R21], [:p1_C22R21R28]]),:R21=>STEP(:R21, :L28_R9, :L5, Symbol[:im_C22, :p1_C22, :p1_C23R9, :im_C22, :p1_C22], Array{Any,1}[[:p1_C22, :p1_C23R9, :im_C22], [:p1_C22R21, :p1_C23R9R21, :im_C22R21]]),:R10=>STEP(:R10, :L9_R6, :L5, Symbol[:im_C22, :p1_C22, :p1_C23R6, :im_C22, :p1_C22], Array{Any,1}[[:p1_C23R6, :p1_C22, :im_C22], [:p1_C23R6R10, :p1_C22R10, :im_C22R10]]),:R20=>STEP(:R20, :L3_R8, :L34, Any[:img2, 0.9], Array{Any,1}[[], []]),:R36=>STEP(:R36, :L3_R28, :L18, [0.95], Array{Any,1}[[], []]),:R2=>STEP(:R2, :L7, :L13, Symbol[:im_C21, :violent2, :im_C21, :p1_C21], Array{Any,1}[[:im_C21, :p1_C21], [:im_C21R2, :p1_C21R2]]),:R5=>STEP(:R5, :L7, :L30, Symbol[:im_C18, :party1, :im_C18, :p1_C18, :p2_C18], Array{Any,1}[[:im_C18, :p1_C18, :p2_C18], [:im_C18R5, :p1_C18R5, :p2_C18R5]])…), Any["ge(x,y)   = x>=y", "gt(x,y)   = x>y", "le(x,y)   = x<=y", "lt(x,y)   = x<y", "eq(x,y)   = x==y", "between(x,low,high) = (low<=x && x<high)", "between2(low,x,high) = (low<=x && x<high)", "times(x,y) = x*y", "add(x,y)  = x+y", "pred(x) = x-1", "succ(x) = x+1"], [69], [26]))

julia> 
